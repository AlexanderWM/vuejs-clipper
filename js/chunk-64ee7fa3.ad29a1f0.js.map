{"version":3,"sources":["webpack:///./src/views/examples/Ex-verticle-images.vue?e54f","webpack:///./src/code.js","webpack:///./src/views/examples/Ex-verticle-images.vue?e9f1","webpack:///src/views/examples/Ex-verticle-images.vue","webpack:///./src/views/examples/Ex-verticle-images.vue?a17d","webpack:///./src/views/examples/Ex-verticle-images.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ex_verticle_images_vue_vue_type_style_index_0_id_13319d06_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ex_verticle_images_vue_vue_type_style_index_0_id_13319d06_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","d","__webpack_exports__","code","verti","trans","zoom","pos","pixel","initapp","html","js","css","upload","upload2","result","js1","preview","full","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","attrs","src","directives","name","rawName","value","expression","model","callback","$$v","ref","style","on","load","imgLoad","slot","wrapRatio","staticRenderFns","Ex_verticle_imagesvue_type_script_lang_js_","data","maxWidth","maxHeight","based","methods","imgRatio","$refs","clipper","computed","basicStyle","examples_Ex_verticle_imagesvue_type_script_lang_js_","component","Object","componentNormalizer"],"mappings":"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","file":"js/chunk-64ee7fa3.ad29a1f0.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-verticle-images.vue?vue&type=style&index=0&id=13319d06&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-verticle-images.vue?vue&type=style&index=0&id=13319d06&lang=scss&scoped=true&\"","const code = {}\ncode.initapp = {}\ncode.initapp.html = `<div id=\"app\">\n  <clipper-basic class=\"my-clipper\" src=\"example.jpg\" />\n</div>`\ncode.initapp.js = `new Vue({\n  el: '#app'\n})`\ncode.initapp.css = `.my-clipper {\n  width: 100%;\n  max-width: 700px;\n}`\ncode.upload = {}\ncode.upload.html =`<div id=\"app\">\n  <input type=\"file\" @change=\"upload($event)\">\n  <clipper-basic class=\"my-clipper\" :src=\"imgURL\">\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\n  </clipper-basic>\n</div>`\ncode.upload.js =  `new Vue({\n  el: '#app',\n  data: {\n    imgURL: ''\n  },\n  methods: {\n    upload: function(e){\n      if (e.target.files.length !== 0) {\n        if(this.imgURL) URL.revokeObjectURL(this.imgURL)\n        this.imgURL = window.URL.createObjectURL(e.target.files[0]);\n      }\n    }\n  }\n})`\ncode.upload.css =`.placeholder {\n  text-align: center;\n  padding: 20px;\n  background-color: lightgray;\n}`\ncode.upload2 = {}\ncode.upload2.html =`<div id=\"app\">\n  <clipper-upload v-model=\"imgURL\">upload image</clipper-upload>\n  <clipper-basic class=\"my-clipper\" :src=\"imgURL\">\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\n  </clipper-basic>\n</div>`\ncode.upload2.js =  `new Vue({\n    el: '#app',\n    data: {\n      imgURL: ''\n    }\n})`\ncode.result = {}\ncode.result.html = `<button @click=\"getResult\">clip image</button>\n<clipper-basic class=\"my-clipper\" ref=\"clipper\" :src=\"imgURL\">\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\n</clipper-basic>\n<div>\n    <div>result:</div>\n    <img class=\"result\" :src=\"resultURL\" alt=\"\">\n</div>`\ncode.result.js1 = `data: {\n  imgURL: '',\n  resultURL: ''\n}`\ncode.result.js = `getResult: function () {\n  const canvas = this.$refs.clipper.clip();//call component's clip method\n  this.resultURL = canvas.toDataURL(\"image/jpeg\", 1);//canvas->image\n}`\ncode.preview = {}\ncode.preview.html = `<clipper-basic \n  class=\"my-clipper\" \n  ref=\"clipper\" \n  :src=\"imgURL\" \n  preview=\"my-preview\" >\n  <div class=\"placeholder\" slot=\"placeholder\">No image</div>\n</clipper-basic>\n<div>\n  <div>preview:</div>\n  <clipper-preview name=\"my-preview\" class=\"my-clipper\">\n    <div class=\"placeholder\" slot=\"placeholder\">preview area</div>\n  </clipper-preview>\n</div>`\ncode.full = \n`<meta charset=\"utf-8\">\n<title>vuejs-clipper demo</title>\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js\"></script>\n<script src=\"./vuejs-clipper.umd.js\"></script>\n<link rel=\"stylesheet\" href=\"./vuejs-clipper.css\">\n<div id=\"app\">\n    <button>\n      <clipper-upload v-model=\"imgURL\">upload image</clipper-upload>\n    </button>\n    <button @click=\"getResult\">clip image</button>\n    <clipper-basic class=\"my-clipper\" ref=\"clipper\" :src=\"imgURL\" preview=\"my-preview\">\n        <div class=\"placeholder\" slot=\"placeholder\">No image</div>\n    </clipper-basic>\n    <div>\n        <div>preview:</div>\n        <clipper-preview name=\"my-preview\" class=\"my-clipper\">\n            <div class=\"placeholder\" slot=\"placeholder\">preview area</div>\n        </clipper-preview>\n    </div>\n    <div>\n        <div>result:</div>\n        <img class=\"result\" :src=\"resultURL\" alt=\"\">\n    </div>\n</div>\n<script>\n    new Vue({\n        el: '#app',\n        data: {\n            imgURL: '',\n            resultURL: ''\n        },\n        methods: {\n            getResult: function () {\n                const canvas = this.$refs.clipper.clip();//call component's clip method\n                this.resultURL = canvas.toDataURL(\"image/jpeg\", 1);//canvas->image\n            }\n        }\n    })\n</script>\n<style>\n    .my-clipper {\n        width: 100%;\n        max-width: 700px;\n    }\n\n    .placeholder {\n        text-align: center;\n        padding: 20px;\n        background-color: lightgray;\n    }\n</style>`\nexport { code }\n\nconst verti = {}\n\nverti.html = `<clipper-basicref=\"clipper\" \n  ref=\"clipper\"\n  :style=\"basicStyle\" \n  src=\"long.jpg\"\n  @load=\"imgLoad\" \n/>`\nverti.js =`data: () => {\n  return {\n      maxWidth: 700,\n      maxHeight: 500,\n      based: 850\n  };\n},\nmethods: {\n  imgLoad: function() {\n      const imgRatio = this.$refs.clipper.imgRatio;\n      if(imgRatio < 1) this.based =  this.maxHeight*imgRatio;\n      else this.based = this.maxWidth;\n  },\n},\ncomputed: {\n  basicStyle : function() {\n      return {\n          maxWidth: this.based + 'px'\n      }\n  }\n}`\n\nverti.html2 = `<clipper-basic\n  src=\"long.jpg\"\n  :wrapRatio=\"1\"\n/>`\nexport { verti }\n\nconst trans = {}\n\ntrans.const = 'const canvas = this.$refs.clipper.clip();'\ntrans.durl = `const jpgURL = canvas.toDataURL(\"image/jpeg\")//to jpg\nconst pngURL = canvas.toDataURL(\"image/png\", 1)//to png`\ntrans.blob = `canvas.toBlob(function(blob) {\n  //...\n});`\ntrans.url = `const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    if(vm.resultURL)\n      URL.revokeObjectURL(vm.resultURL)\n    vm.resultURL = URL.createObjectURL(blob)\n})`\ntrans.urles6 = `this.$refs.clipper.clip().toBlob(blob=>{\n  if(this.resultURL) URL.revokeObjectURL(this.resultURL)\n  this.resultURL = URL.createObjectURL(blob)\n})`\ntrans.reader = `const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    const reader = new FileReader()\n    reader.addEventListener('load' ,function(){\n        vm.resultURL = this.result;\n    })\n    reader.readAsDataURL(blob);\n})`\nexport { trans }\n\nconst zoom = {}\n\nzoom.ex1 = `<clipper-fixed \n  src=\"ex2.jpg\" \n  shadow=\"transparent\" \n  border-color=\"transparent\"\n  :grid=\"false\"\n/>`\n\nexport {zoom}\n\nconst pos = {}\n\npos.basicHtml = '<clipper-basic ref=\"clipper\" src=\"ex2.jpg\" />'\n\npos.basic = '//click buttons'\n\npos.fixed = '//click buttons'\n// after the image is loaded\n\n\nexport {pos}\n\nconst pixel = {}\n\npixel.script = `const canvas = this.$refs.clipper.clip({ wPixel: <pixel> })`\n\nexport { pixel }\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-content content\"},[_c('div',{staticClass:\"area\"},[_c('h2',[_vm._v(\"Verticle images\")]),_vm._m(0),_c('p',[_vm._v(\"Clipper-basic will set its layout ratio same as the image or the “wrapRatio”\")]),_c('p',[_vm._v(\"Clipper-fixed will set its layout ratio same as its “ratio” attribute.\")]),_vm._m(1),_vm._m(2),_vm._m(3),_c('h3',[_vm._v(\"upload image\")]),_c('img',{staticClass:\"pic\",attrs:{\"src\":\"long.jpg\"}}),_c('h3',[_vm._v(\"Clipper-fixed\")]),_c('p',[_vm._v(\"Clipper-fixed will set its layout ratio same as its “ratio” attribute (default 1).\")]),_c('clipper-fixed',{staticClass:\"sample\",attrs:{\"src\":\"long.jpg\"}}),_c('h3',[_vm._v(\"Clipper-basic\")]),_c('p',[_vm._v(\"Clipper-basic will set its layout ratio same as the image.\")]),_c('p',[_vm._v(\"It becomes too long.\")]),_c('clipper-basic',{staticClass:\"sample\",attrs:{\"src\":\"long.jpg\"}}),_c('p',[_vm._v(\"To avoid this, just use clipper-fixed instead, or you need to do some extra work.\")])],1),_c('div',{staticClass:\"area\"},[_c('h2',[_vm._v(\"Clipper-basic based on height\")]),_c('h3',[_vm._v(\"implement load event\")]),_vm._m(4),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.html),expression:\"code.html\"}]},[_c('code',{staticClass:\"html\"})]),_c('p',[_vm._v(\"then you can implement the load event if it's a verticle image, calc max-width based on your maxHeight, otherwise use maxWidth directly.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.js),expression:\"code.js\"}]},[_c('code',{staticClass:\"javascript\"})]),_c('clipper-upload',{staticClass:\"btn\",model:{value:(_vm.src),callback:function ($$v) {_vm.src=$$v},expression:\"src\"}},[_vm._v(\"upload image\")]),_c('clipper-basic',{ref:\"clipper\",style:(_vm.basicStyle),attrs:{\"src\":_vm.src},on:{\"load\":_vm.imgLoad}},[_c('div',{attrs:{\"slot\":\"placeholder\"},slot:\"placeholder\"},[_vm._v(\"No image\")])]),_c('p',[_vm._v(\"Or you could set “wrapRatio” to make clipper-basic a fixed layout.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.html2),expression:\"code.html2\"}]},[_c('code',{staticClass:\"html\"})]),_c('clipper-basic',{staticClass:\"sample\",attrs:{\"src\":_vm.src,\"wrapRatio\":1},on:{\"load\":_vm.imgLoad}},[_c('div',{attrs:{\"slot\":\"placeholder\"},slot:\"placeholder\"},[_vm._v(\"No image\")])])],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Clipper-basic, which acts as an \"),_c('i',[_vm._v(\"image\")]),_vm._v(\" element, will automatically set its height \"),_c('b',[_vm._v(\"based on width\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"For example, you set both clipper-basic and clipper-fixed to have max-width 500 pixels, \\n            upload an image which width and height are \"),_c('u',[_vm._v(\"4:3\")]),_vm._v(\", then clipper-basic will be \"),_c('u',[_vm._v(\"500 x 375\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Assume clipper-fixed has attribute ratio set to 1, then clipper-fixed will be \"),_c('u',[_vm._v(\"500 x 500\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"This might not be a good idea for clipper-basic when uploading a verticle image if you upload an image which is 1:2, \\n            clipper-basic will become \"),_c('u',[_vm._v(\"500 x 1000\")]),_vm._v(\" that might ruin the layout of the page.\\n        \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"First add a \"),_c('i',[_vm._v(\"v-on\")]),_vm._v(\" to clipper-basic's load event, and binding style to a style object.\")])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"list-content content\">\n        <div class=\"area\">\n            <h2>Verticle images</h2>\n            <p>Clipper-basic, which acts as an <i>image</i> element, will automatically set its height <b>based on width</b>.</p>\n            <p>Clipper-basic will set its layout ratio same as the image or the “wrapRatio”</p>\n            <p>Clipper-fixed will set its layout ratio same as its “ratio” attribute.</p>\n            <p>For example, you set both clipper-basic and clipper-fixed to have max-width 500 pixels, \n                upload an image which width and height are <u>4:3</u>, then clipper-basic will be <u>500 x 375</u>.</p>\n            <p>Assume clipper-fixed has attribute ratio set to 1, then clipper-fixed will be <u>500 x 500</u>.</p>\n            <p>This might not be a good idea for clipper-basic when uploading a verticle image if you upload an image which is 1:2, \n                clipper-basic will become <u>500 x 1000</u> that might ruin the layout of the page.\n            </p>\n            <h3>upload image</h3>\n            <img class=\"pic\" src=\"long.jpg\">\n            <h3>Clipper-fixed</h3>\n            <p>Clipper-fixed will set its layout ratio same as its “ratio” attribute (default 1).</p>\n            <clipper-fixed class=\"sample\" src=\"long.jpg\"></clipper-fixed>\n            <h3>Clipper-basic</h3>\n            <p>Clipper-basic will set its layout ratio same as the image.</p>\n            <p>It becomes too long.</p>\n            <clipper-basic class=\"sample\" src=\"long.jpg\"></clipper-basic>\n            <p>To avoid this, just use clipper-fixed instead, or you need to do some extra work.</p>\n        </div>\n        <div class=\"area\">\n            <h2>Clipper-basic based on height</h2>\n            <h3>implement load event</h3>\n            <p>First add a <i>v-on</i> to clipper-basic's load event, and binding style to a style object.</p>\n            <pre v-highlightjs=\"code.html\"><code class=\"html\"></code></pre>\n            <p>then you can implement the load event if it's a verticle image, calc max-width based on your maxHeight, otherwise use maxWidth directly.</p>\n            <pre v-highlightjs=\"code.js\"><code class=\"javascript\"></code></pre>\n            <clipper-upload class=\"btn\" v-model=\"src\">upload image</clipper-upload>\n            <clipper-basic ref=\"clipper\" :style=\"basicStyle\" @load=\"imgLoad\" :src=\"src\">\n                <div slot=\"placeholder\">No image</div>\n            </clipper-basic>\n            <p>Or you could set “wrapRatio” to make clipper-basic a fixed layout.</p>\n            <pre v-highlightjs=\"code.html2\"><code class=\"html\"></code></pre>\n            <clipper-basic class=\"sample\" @load=\"imgLoad\" :src=\"src\" :wrapRatio=\"1\">\n                <div slot=\"placeholder\">No image</div>\n            </clipper-basic>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { verti as code } from '@/code.js';\nexport default {\n  data: () => {\n    return {\n      code,\n      src: 'long.jpg',\n      maxWidth: 700,\n      maxHeight: 500,\n      based: 850\n    };\n  },\n  methods: {\n    imgLoad: function() {\n      const imgRatio = this.$refs.clipper.imgRatio;\n      if(imgRatio < 1) this.based =  this.maxHeight*imgRatio;\n      else this.based = this.maxWidth;\n    },\n  },\n  computed: {\n    basicStyle : function() {\n      return {\n        maxWidth: this.based + 'px'\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sample{\n    width: 100%;\n    max-width: 700px;\n}\n.pic{\n    height: 50vh;\n    max-height: 300px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-verticle-images.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-verticle-images.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ex-verticle-images.vue?vue&type=template&id=13319d06&scoped=true&\"\nimport script from \"./Ex-verticle-images.vue?vue&type=script&lang=js&\"\nexport * from \"./Ex-verticle-images.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ex-verticle-images.vue?vue&type=style&index=0&id=13319d06&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"13319d06\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}