(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7025d091"],{"09b5":function(e,i,t){"use strict";t.d(i,"a",function(){return n}),t.d(i,"c",function(){return l}),t.d(i,"b",function(){return s});var n={initapp:{}};n.initapp.html='<div id="app">\n  <clipper-basic class="my-clipper" src="example.jpg"></clipper-basic>\n</div>',n.initapp.js="new Vue({\n  el: '#app'\n})",n.initapp.css=".my-clipper {\n  width: 100%;\n  max-width: 700px;\n}",n.upload={},n.upload.html='<div id="app">\n  <input type="file" @change="upload($event)">\n  <clipper-basic class="my-clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n  </clipper-basic>\n</div>',n.upload.js="new Vue({\n  el: '#app',\n  data: {\n    imgURL: ''\n  },\n  methods: {\n    upload: function(e){\n      if (e.target.files.length !== 0) {\n        if(this.imgURL) URL.revokeObjectURL(this.imgURL)\n        this.imgURL = window.URL.createObjectURL(e.target.files[0]);\n      }\n    }\n  }\n})",n.upload.css=".placeholder {\n  text-align: center;\n  padding: 20px;\n  background-color: lightgray;\n}",n.upload2={},n.upload2.html='<div id="app">\n  <clipper-upload v-model="imgURL">upload image</clipper-upload>\n  <clipper-basic class="my-clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n  </clipper-basic>\n</div>',n.upload2.js="new Vue({\n    el: '#app',\n    data: {\n      imgURL: ''\n    }\n})",n.result={},n.result.html='<button @click="getResult">clip image</button>\n<clipper-basic class="my-clipper" ref="clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n</clipper-basic>\n<div>\n    <div>result:</div>\n    <img class="result" :src="resultURL" alt="">\n</div>',n.result.js1="data: {\n  imgURL: '',\n  resultURL: ''\n}",n.result.js='getResult: function () {\n  const canvas = this.$refs.clipper.clip();//call component\'s clip method\n  this.resultURL = canvas.toDataURL("image/jpg", 1);//canvas->image\n}',n.preview={},n.preview.html='<clipper-basic \n  class="my-clipper" \n  ref="clipper" \n  :src="imgURL" \n  preview="my-preview" >\n  <div class="placeholder" slot="placeholder">No image</div>\n</clipper-basic>\n<div>\n  <div>preview:</div>\n  <clipper-preview name="my-preview" class="my-clipper">\n    <div class="placeholder" slot="placeholder">preview area</div>\n  </clipper-preview>\n</div>',n.full='<meta charset="utf-8">\n<title>vuejs-clipper demo</title>\n<script src="https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js"><\/script>\n<script src="./vuejs-clipper.umd.js"><\/script>\n<link rel="stylesheet" href="./vuejs-clipper.css">\n<div id="app">\n    <button>\n      <clipper-upload v-model="imgURL">upload image</clipper-upload>\n    </button>\n    <button @click="getResult">clip image</button>\n    <clipper-basic class="my-clipper" ref="clipper" :src="imgURL" preview="my-preview">\n        <div class="placeholder" slot="placeholder">No image</div>\n    </clipper-basic>\n    <div>\n        <div>preview:</div>\n        <clipper-preview name="my-preview" class="my-clipper">\n            <div class="placeholder" slot="placeholder">preview area</div>\n        </clipper-preview>\n    </div>\n    <div>\n        <div>result:</div>\n        <img class="result" :src="resultURL" alt="">\n    </div>\n</div>\n<script>\n    new Vue({\n        el: \'#app\',\n        data: {\n            imgURL: \'\',\n            resultURL: \'\'\n        },\n        methods: {\n            getResult: function () {\n                const canvas = this.$refs.clipper.clip();//call component\'s clip method\n                this.resultURL = canvas.toDataURL("image/jpg", 1);//canvas->image\n            }\n        }\n    })\n<\/script>\n<style>\n    .my-clipper {\n        width: 100%;\n        max-width: 700px;\n    }\n\n    .placeholder {\n        text-align: center;\n        padding: 20px;\n        background-color: lightgray;\n    }\n</style>';var l={html:'<clipper-basicref="clipper" \n  ref="clipper"\n  @load="imgLoad" \n  :style="basicStyle" \n  src="long.jpg">\n</clipper-basic>',js:"data: () => {\n  return {\n      maxWidth: 700,\n      maxHeight: 500,\n      based: 850\n  };\n},\nmethods: {\n  imgLoad: function() {\n      const imgRatio = this.$refs.clipper.imgRatio;\n      if(imgRatio < 1) this.based =  this.maxHeight*imgRatio;\n      else this.based = this.maxWidth;\n  },\n},\ncomputed: {\n  basicStyle : function() {\n      return {\n          maxWidth: this.based + 'px'\n      }\n  }\n}"},s={const:"const canvas = this.$refs.clipper.clip();",durl:'const jpgURL = canvas.toDataURL("image/jpeg")//to jpg\nconst pngURL = canvas.toDataURL("image/png", 1)//to png',blob:"canvas.toBlob(function(blob) {\n  //...\n});",url:"const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    if(vm.resultURL)\n      URL.revokeObjectURL(vm.resultURL)\n    vm.resultURL = URL.createObjectURL(blob)\n})",urles6:"this.$refs.clipper.clip().toBlob(blob=>{\n  if(this.resultURL) URL.revokeObjectURL(this.resultURL)\n  this.resultURL = URL.createObjectURL(blob)\n})",reader:"const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    const reader = new FileReader()\n    reader.addEventListener('load' ,function(){\n        vm.resultURL = this.result;\n    })\n    reader.readAsDataURL(blob);\n})"}},1980:function(e,i,t){},"85ad":function(e,i,t){"use strict";var n=t("1980"),l=t.n(n);l.a},ab2a:function(e,i,t){"use strict";t("cadf"),t("551c"),t("097d");i["a"]={methods:{clipToURL:function(){var e=this,i=this.$refs.clipper.clip();i.toBlob?i.toBlob(function(i){e.clipResult&&URL.revokeObjectURL(e.clipResult),e.clipResult=URL.createObjectURL(i),e.link=e.clipResult},"image/png",1):(this.clipResult=i.toDataURL("image/png",1),this.link=this.clipResult),this.done=!1},reaultDone:function(){console.log("load")}}}},d930:function(e,i,t){"use strict";t.r(i);var n=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",[e.popup?t("div",{staticClass:"popup"},[t("div",{staticClass:"popup-content"},[t("div",{staticClass:"flow"},[t("clipper-fixed",{ref:"clipper",staticClass:"clipper-fixed",attrs:{src:e.src,round:!0}}),t("div",{staticClass:"flex-center"},[t("button",{staticClass:"btn g",on:{click:e.confirm}},[e._v("confirm")]),t("button",{staticClass:"btn r",on:{click:e.cancel}},[e._v("cancel")])])],1),t("img",{staticClass:"close",attrs:{src:"icon/cancel.png",alt:""},on:{click:e.confirm}})])]):e._e(),t("div",{staticClass:"list-content content"},[t("div",{staticClass:"area"},[t("h3",{staticClass:"tc"},[e._v("Edit Profile")]),t("div",{staticClass:"flex center"},[t("div",{staticClass:"pic-con"},[t("img",{attrs:{src:e.clipResult}}),t("clipper-upload",{staticClass:"upload",on:{input:e.open},model:{value:e.src,callback:function(i){e.src=i},expression:"src"}},[t("span",[e._v("upload image")])])],1),e._m(0)])])])])},l=[function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"edit-area mt"},[t("div",[t("label",[e._v("First Name: ")]),t("input",{attrs:{type:"text"}})]),t("div",[t("label",[e._v("Last Name: ")]),t("input",{attrs:{type:"text"}})]),t("div",[t("label",[e._v("Tel: ")]),t("input",{attrs:{type:"text"}}),t("br")]),t("div",[t("label",[e._v("Address: ")]),t("input",{attrs:{type:"text"}}),t("br")])])}],s=(t("cadf"),t("551c"),t("097d"),t("09b5")),c=t("ab2a"),a={extends:{mixins:[c["a"]]},data:function(){return{popup:!1,clipResult:"profile.png",src:"",link:"",code:s["b"]}},methods:{open:function(){this.popup=!0},close:function(){this.popup=!1},confirm:function(){this.clipToURL(),this.close()},cancel:function(){this.close()}}},p=a,r=(t("85ad"),t("2877")),o=Object(r["a"])(p,n,l,!1,null,"38a273d4",null);o.options.__file="Ex-profile-photo.vue";i["default"]=o.exports}}]);
//# sourceMappingURL=chunk-7025d091.522fb921.js.map