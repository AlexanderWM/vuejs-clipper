{"version":3,"sources":["webpack:///./src/views/examples/Ex-canvas-to-image.vue?693c","webpack:///./src/code.js","webpack:///./src/clip.js","webpack:///./src/views/examples/Ex-canvas-to-image.vue?9126","webpack:///src/views/examples/Ex-canvas-to-image.vue","webpack:///./src/views/examples/Ex-canvas-to-image.vue?f900","webpack:///./src/views/examples/Ex-canvas-to-image.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ex_canvas_to_image_vue_vue_type_style_index_0_id_7f30a9bc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ex_canvas_to_image_vue_vue_type_style_index_0_id_7f30a9bc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","d","__webpack_exports__","code","verti","trans","initapp","html","js","css","upload","upload2","result","js1","preview","full","methods","clipToURL","_this","this","Promise","res","rej","canvas","$refs","clipper","clip","toBlob","blob","clipResult","URL","revokeObjectURL","createObjectURL","link","toDataURL","resultDone","done","render","_vm","_h","$createElement","_c","_self","staticClass","_m","directives","name","rawName","value","expression","_v","attrs","to","on","click","src","alt","ref","staticRenderFns","Ex_canvas_to_imagevue_type_script_lang_js_","extends","mixins","data","examples_Ex_canvas_to_imagevue_type_script_lang_js_","component","Object","componentNormalizer","options","__file"],"mappings":"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","file":"js/chunk-048b3255.3469497d.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-canvas-to-image.vue?vue&type=style&index=0&id=7f30a9bc&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-canvas-to-image.vue?vue&type=style&index=0&id=7f30a9bc&lang=scss&scoped=true&\"","const code = {}\r\ncode.initapp = {}\r\ncode.initapp.html = `<div id=\"app\">\r\n  <clipper-basic class=\"my-clipper\" src=\"example.jpg\"></clipper-basic>\r\n</div>`\r\ncode.initapp.js = `new Vue({\r\n  el: '#app'\r\n})`\r\ncode.initapp.css = `.my-clipper {\r\n  width: 100%;\r\n  max-width: 700px;\r\n}`\r\ncode.upload = {}\r\ncode.upload.html =`<div id=\"app\">\r\n  <input type=\"file\" @change=\"upload($event)\">\r\n  <clipper-basic class=\"my-clipper\" :src=\"imgURL\">\r\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\r\n  </clipper-basic>\r\n</div>`\r\ncode.upload.js =  `new Vue({\r\n  el: '#app',\r\n  data: {\r\n    imgURL: ''\r\n  },\r\n  methods: {\r\n    upload: function(e){\r\n      if (e.target.files.length !== 0) {\r\n        if(this.imgURL) URL.revokeObjectURL(this.imgURL)\r\n        this.imgURL = window.URL.createObjectURL(e.target.files[0]);\r\n      }\r\n    }\r\n  }\r\n})`\r\ncode.upload.css =`.placeholder {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: lightgray;\r\n}`\r\ncode.upload2 = {}\r\ncode.upload2.html =`<div id=\"app\">\r\n  <clipper-upload v-model=\"imgURL\">upload image</clipper-upload>\r\n  <clipper-basic class=\"my-clipper\" :src=\"imgURL\">\r\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\r\n  </clipper-basic>\r\n</div>`\r\ncode.upload2.js =  `new Vue({\r\n    el: '#app',\r\n    data: {\r\n      imgURL: ''\r\n    }\r\n})`\r\ncode.result = {}\r\ncode.result.html = `<button @click=\"getResult\">clip image</button>\r\n<clipper-basic class=\"my-clipper\" ref=\"clipper\" :src=\"imgURL\">\r\n    <div class=\"placeholder\" slot=\"placeholder\">No image</div>\r\n</clipper-basic>\r\n<div>\r\n    <div>result:</div>\r\n    <img class=\"result\" :src=\"resultURL\" alt=\"\">\r\n</div>`\r\ncode.result.js1 = `data: {\r\n  imgURL: '',\r\n  resultURL: ''\r\n}`\r\ncode.result.js = `getResult: function () {\r\n  const canvas = this.$refs.clipper.clip();//call component's clip method\r\n  this.resultURL = canvas.toDataURL(\"image/jpg\", 1);//canvas->image\r\n}`\r\ncode.preview = {}\r\ncode.preview.html = `<clipper-basic \r\n  class=\"my-clipper\" \r\n  ref=\"clipper\" \r\n  :src=\"imgURL\" \r\n  preview=\"my-preview\" >\r\n  <div class=\"placeholder\" slot=\"placeholder\">No image</div>\r\n</clipper-basic>\r\n<div>\r\n  <div>preview:</div>\r\n  <clipper-preview name=\"my-preview\" class=\"my-clipper\">\r\n    <div class=\"placeholder\" slot=\"placeholder\">preview area</div>\r\n  </clipper-preview>\r\n</div>`\r\ncode.full = \r\n`<meta charset=\"utf-8\">\r\n<title>vuejs-clipper demo</title>\r\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js\"></script>\r\n<script src=\"./vuejs-clipper.umd.js\"></script>\r\n<link rel=\"stylesheet\" href=\"./vuejs-clipper.css\">\r\n<div id=\"app\">\r\n    <button>\r\n      <clipper-upload v-model=\"imgURL\">upload image</clipper-upload>\r\n    </button>\r\n    <button @click=\"getResult\">clip image</button>\r\n    <clipper-basic class=\"my-clipper\" ref=\"clipper\" :src=\"imgURL\" preview=\"my-preview\">\r\n        <div class=\"placeholder\" slot=\"placeholder\">No image</div>\r\n    </clipper-basic>\r\n    <div>\r\n        <div>preview:</div>\r\n        <clipper-preview name=\"my-preview\" class=\"my-clipper\">\r\n            <div class=\"placeholder\" slot=\"placeholder\">preview area</div>\r\n        </clipper-preview>\r\n    </div>\r\n    <div>\r\n        <div>result:</div>\r\n        <img class=\"result\" :src=\"resultURL\" alt=\"\">\r\n    </div>\r\n</div>\r\n<script>\r\n    new Vue({\r\n        el: '#app',\r\n        data: {\r\n            imgURL: '',\r\n            resultURL: ''\r\n        },\r\n        methods: {\r\n            getResult: function () {\r\n                const canvas = this.$refs.clipper.clip();//call component's clip method\r\n                this.resultURL = canvas.toDataURL(\"image/jpg\", 1);//canvas->image\r\n            }\r\n        }\r\n    })\r\n</script>\r\n<style>\r\n    .my-clipper {\r\n        width: 100%;\r\n        max-width: 700px;\r\n    }\r\n\r\n    .placeholder {\r\n        text-align: center;\r\n        padding: 20px;\r\n        background-color: lightgray;\r\n    }\r\n</style>`\r\nexport { code }\r\n\r\nconst verti = {}\r\n\r\nverti.html = `<clipper-basicref=\"clipper\" \r\n  ref=\"clipper\"\r\n  @load=\"imgLoad\" \r\n  :style=\"basicStyle\" \r\n  src=\"long.jpg\">\r\n</clipper-basic>`\r\nverti.js =`data: () => {\r\n  return {\r\n      maxWidth: 700,\r\n      maxHeight: 500,\r\n      based: 850\r\n  };\r\n},\r\nmethods: {\r\n  imgLoad: function() {\r\n      const imgRatio = this.$refs.clipper.imgRatio;\r\n      if(imgRatio < 1) this.based =  this.maxHeight*imgRatio;\r\n      else this.based = this.maxWidth;\r\n  },\r\n},\r\ncomputed: {\r\n  basicStyle : function() {\r\n      return {\r\n          maxWidth: this.based + 'px'\r\n      }\r\n  }\r\n}`\r\n\r\nexport { verti }\r\n\r\nconst trans = {}\r\n\r\ntrans.const = `const canvas = this.$refs.clipper.clip();`\r\ntrans.durl = `const jpgURL = canvas.toDataURL(\"image/jpeg\")//to jpg\r\nconst pngURL = canvas.toDataURL(\"image/png\", 1)//to png`\r\ntrans.blob = `canvas.toBlob(function(blob) {\r\n  //...\r\n});`\r\ntrans.url = `const vm = this;\r\nconst canvas = this.$refs.clipper.clip();\r\ncanvas.toBlob(function(blob){\r\n    if(vm.resultURL)\r\n      URL.revokeObjectURL(vm.resultURL)\r\n    vm.resultURL = URL.createObjectURL(blob)\r\n})`\r\ntrans.urles6 = `this.$refs.clipper.clip().toBlob(blob=>{\r\n  if(this.resultURL) URL.revokeObjectURL(this.resultURL)\r\n  this.resultURL = URL.createObjectURL(blob)\r\n})`\r\ntrans.reader = `const vm = this;\r\nconst canvas = this.$refs.clipper.clip();\r\ncanvas.toBlob(function(blob){\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load' ,function(){\r\n        vm.resultURL = this.result;\r\n    })\r\n    reader.readAsDataURL(blob);\r\n})`\r\nexport { trans }","export default {\n  methods: {\n    clipToURL: function () {\n      return new Promise((res, rej) => {\n        const canvas = this.$refs.clipper.clip();\n        if (canvas.toBlob) {\n          canvas.toBlob(\n            (blob) => {\n              if (this.clipResult) URL.revokeObjectURL(this.clipResult);\n              this.clipResult = URL.createObjectURL(blob);\n              this.link = this.clipResult;\n              res()\n            },\n            'image/png', 1\n          );\n        } else {\n          this.clipResult = canvas.toDataURL('image/png', 1);\n          this.link = this.clipResult;\n          res()\n        }\n      })\n    },\n    resultDone: function () {\n      this.done = true;\n    }\n  }\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-content content\"},[_vm._m(0),_c('div',{staticClass:\"area\"},[_vm._m(1),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.const),expression:\"code.const\"}]},[_c('code',{staticClass:\"javascript\"})]),_c('p',[_vm._v(\"If you don't know how to get the result from from clipping component, see \"),_c('router-link',{attrs:{\"to\":\"/examples/quick-start\"}},[_vm._v(\"quick start\")]),_vm._v(\".\")],1)]),_c('div',{staticClass:\"area\"},[_c('h3',[_vm._v(\"canvas.toDataURL\")]),_c('p',[_vm._v(\"canvas to base64 encoded string, synchronous.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.durl),expression:\"code.durl\"}]},[_c('code',{staticClass:\"javascript\"})])]),_c('div',{staticClass:\"area\"},[_c('h3',[_vm._v(\"canvas.toBlob\")]),_vm._m(2),_c('p',[_vm._v(\"canvas to blob, asynchronous.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.blob),expression:\"code.blob\"}]},[_c('code',{staticClass:\"javascript\"})]),_c('h3',[_vm._v(\"URL.createObjectURL\")]),_c('p',[_vm._v(\"Blob to image url(DOMString), using URL.createObjectURL, synchronous.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.url),expression:\"code.url\"}]},[_c('code',{staticClass:\"javascript\"})]),_c('p',[_vm._v(\"simplified\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.urles6),expression:\"code.urles6\"}]},[_c('code',{staticClass:\"javascript\"})]),_c('h3',[_vm._v(\"FileReader\")]),_c('p',[_vm._v(\"Blob to image url(base64 encoded string), using FileReader, asynchronous.\")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\",value:(_vm.code.reader),expression:\"code.reader\"}]},[_c('code',{staticClass:\"javascript\"})])]),_c('div',{staticClass:\"area\"},[_c('p',[_c('button',{on:{\"click\":_vm.clip}},[_vm._v(\"clip image\")])]),_c('p',[_c('img',{staticClass:\"sample\",attrs:{\"src\":_vm.clipResult,\"alt\":\"\"}})]),_c('clipper-fixed',{ref:\"clipper\",staticClass:\"sample\",attrs:{\"src\":_vm.src}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"area\"},[_c('h2',[_vm._v(\"Canvas to Image\")]),_c('p',[_vm._v(\"Since clipper component's result is only a canvas element, you might want to transform canvas to image for more usages.\")]),_c('p',[_vm._v(\"There's many ways you can transform canvas to image (image URL), here are some examples.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"First we get the result (canvas) from clipping component, and save it as \"),_c('i',[_vm._v(\"const canvas\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('b',[_vm._v(\"IE not supported.\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"list-content content\">\r\n        <div class=\"area\">\r\n            <h2>Canvas to Image</h2>\r\n            <p>Since clipper component's result is only a canvas element, you might want to transform canvas to image for more usages.</p>\r\n            <p>There's many ways you can transform canvas to image (image URL), here are some examples.</p>      \r\n        </div>\r\n        <div class=\"area\">\r\n            <p>First we get the result (canvas) from clipping component, and save it as <i>const canvas</i></p>\r\n            <pre v-highlightjs=\"code.const\"><code class=\"javascript\"></code></pre>\r\n            <p>If you don't know how to get the result from from clipping component, see <router-link to=\"/examples/quick-start\">quick start</router-link>.</p>\r\n        </div>\r\n        <div class=\"area\">\r\n            <h3>canvas.toDataURL</h3>\r\n            <p>canvas to base64 encoded string, synchronous.</p>\r\n            <pre v-highlightjs=\"code.durl\"><code class=\"javascript\"></code></pre>\r\n        </div>\r\n        <div class=\"area\">\r\n            <h3>canvas.toBlob</h3>\r\n            <p><b>IE not supported.</b></p>\r\n            <p>canvas to blob, asynchronous.</p>\r\n            <pre v-highlightjs=\"code.blob\"><code class=\"javascript\"></code></pre>\r\n            <h3>URL.createObjectURL</h3>\r\n            <p>Blob to image url(DOMString), using URL.createObjectURL, synchronous.</p>\r\n            <pre v-highlightjs=\"code.url\"><code class=\"javascript\"></code></pre>\r\n            <p>simplified</p>\r\n            <pre v-highlightjs=\"code.urles6\"><code class=\"javascript\"></code></pre>\r\n            <h3>FileReader</h3>\r\n            <p>Blob to image url(base64 encoded string), using FileReader, asynchronous.</p>\r\n            <pre v-highlightjs=\"code.reader\"><code class=\"javascript\"></code></pre>\r\n        </div>\r\n        <div class=\"area\">\r\n            <p><button @click=\"clip\">clip image</button></p>\r\n            <p><img class=\"sample\" :src=\"clipResult\" alt=\"\"></p>\r\n            <clipper-fixed class=\"sample\" ref=\"clipper\" :src=\"src\"></clipper-fixed>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { trans as code } from \"@/code.js\";\r\nimport clipToURL from '@/clip.js'\r\nexport default {\r\n  extends: {\r\n    mixins: [clipToURL]\r\n  },\r\n  data: () => {\r\n    return {\r\n      src: \"ex1.jpg\",\r\n      clipResult: \"\",\r\n      code\r\n    };\r\n  },\r\n  methods: {\r\n    clip: function(){\r\n      this.clipToURL()\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.sample {\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-canvas-to-image.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ex-canvas-to-image.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ex-canvas-to-image.vue?vue&type=template&id=7f30a9bc&scoped=true&\"\nimport script from \"./Ex-canvas-to-image.vue?vue&type=script&lang=js&\"\nexport * from \"./Ex-canvas-to-image.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ex-canvas-to-image.vue?vue&type=style&index=0&id=7f30a9bc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7f30a9bc\",\n  null\n  \n)\n\ncomponent.options.__file = \"Ex-canvas-to-image.vue\"\nexport default component.exports"],"sourceRoot":""}